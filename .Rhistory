shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#Grafos
library(igraph)
g <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6), directed = F)
edge.labels <- c("a", "b", "c", "d", "e", "f")
node.types <- c(1,2,2,2,2,3)
mapping.colors <- c("gray", "white", "yellow")
node.colors <- mapping.colors[node.types]
set.seed(1111)
plot(g, edge.label = edge.labels, vertex.color = node.colors)
g <- graph(c(A,B, 2,3, 2,4, 1,4, 5,5, 3,6), directed = F)
edge.labels <- c("a", "b", "c", "d", "e", "f")
node.types <- c(1,2,2,2,2,3)
mapping.colors <- c("gray", "white", "yellow")
node.colors <- mapping.colors[node.types]
set.seed(1111)
plot(g, edge.label = edge.labels, vertex.color = node.colors)
g <- graph(c(A,B, 2,3, 2,4, 1,4, 5,5, 3,6), directed = F)
edge.labels <- c("a", "b", "c", "d", "e", "f")
node.types <- c(1,2,2,2,2,3)
mapping.colors <- c("gray", "white", "yellow")
node.colors <- mapping.colors[node.types]
set.seed(1111)
plot(g, edge.label = edge.labels, vertex.color = node.colors)
B
g <- graph(c("A","B", 2,3, 2,4, 1,4, 5,5, 3,6), directed = F)
edge.labels <- c("a", "b", "c", "d", "e", "f")
node.types <- c(1,2,2,2,2,3)
mapping.colors <- c("gray", "white", "yellow")
node.colors <- mapping.colors[node.types]
set.seed(1111)
plot(g, edge.label = edge.labels, vertex.color = node.colors)
g <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6), directed = F)
edge.labels <- c("a", "b", "c", "d", "e", "f")
node.types <- c(1,2,2,2,2,3)
mapping.colors <- c("gray", "white", "yellow")
node.colors <- mapping.colors[node.types]
set.seed(1111)
plot(g, edge.label = edge.labels, vertex.color = node.colors)
runApp()
runApp()
runApp()
runApp()
runApp()
install("visNetwork")
install.packages("visNetwork")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nodes <- data.frame(id = V(automaton)$name, label = V(automaton)$name, color = node.colors)
#input$text
automaton <- graph(c("A","B", "B","C", "C","D"), directed = F)
edge.labels <- c("a", "b", "c")
node.types <- c(1,2,3)
mapping.colors <- c("green", "gray", "red")
node.colors <- mapping.colors[node.types]
plot(automaton, edge.label = edge.labels, vertex.color = node.colors)
nodes <- data.frame(id = V(automaton)$name, label = V(automaton)$name, color = node.colors)
edges <- data.frame(from = ends(automaton, E(automaton))[,1], to = ends(automaton, E(automaton))[,2], label = edge.labels)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('stringr')
runApp()
x <- c("apple", "banana", "pear")
grep(x, "an")
x <- c("apple", "banana", "pear")
regexpr("an",x)
runApp()
runApp()
x <- c("apple", "banana", "pear")
regexpr(x, "an")
str_extract(x, "an")
x <- c("apple", "banana", "pear")
regex(str_extract(x, "an"))
x <- c("apple", "banana", "pear")
regexpr(str_extract(x, "an"))
regexpr(x, "an")
x <- c("apple", "banana", "pear")
regexpr(x, "an")
regexpr("an",x)
grepl("an",x)
x <- c("apple", "banana", "pear")
grepl("an",x)
runApp()
runApp()
